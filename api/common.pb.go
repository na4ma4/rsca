// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: github.com/na4ma4/rsca/api/common.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_OK       Status = 0
	Status_WARNING  Status = 1
	Status_CRITICAL Status = 2
	Status_UNKNOWN  Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "WARNING",
		2: "CRITICAL",
		3: "UNKNOWN",
	}
	Status_value = map[string]int32{
		"OK":       0,
		"WARNING":  1,
		"CRITICAL": 2,
		"UNKNOWN":  3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_na4ma4_rsca_api_common_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_github_com_na4ma4_rsca_api_common_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type CheckType int32

const (
	CheckType_HOST    CheckType = 0
	CheckType_SERVICE CheckType = 1
)

// Enum value maps for CheckType.
var (
	CheckType_name = map[int32]string{
		0: "HOST",
		1: "SERVICE",
	}
	CheckType_value = map[string]int32{
		"HOST":    0,
		"SERVICE": 1,
	}
)

func (x CheckType) Enum() *CheckType {
	p := new(CheckType)
	*p = x
	return p
}

func (x CheckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_na4ma4_rsca_api_common_proto_enumTypes[1].Descriptor()
}

func (CheckType) Type() protoreflect.EnumType {
	return &file_github_com_na4ma4_rsca_api_common_proto_enumTypes[1]
}

func (x CheckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Empty_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Empty_builder) Build() *Empty {
	m0 := &Empty{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type TriggerAllResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Names []string               `protobuf:"bytes,1,rep,name=names"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TriggerAllResponse) Reset() {
	*x = TriggerAllResponse{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAllResponse) ProtoMessage() {}

func (x *TriggerAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TriggerAllResponse) GetNames() []string {
	if x != nil {
		return x.xxx_hidden_Names
	}
	return nil
}

func (x *TriggerAllResponse) SetNames(v []string) {
	x.xxx_hidden_Names = v
}

type TriggerAllResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Names []string
}

func (b0 TriggerAllResponse_builder) Build() *TriggerAllResponse {
	m0 := &TriggerAllResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Names = b.Names
	return m0
}

type TriggerInfoResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Names []string               `protobuf:"bytes,1,rep,name=names"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TriggerInfoResponse) Reset() {
	*x = TriggerInfoResponse{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerInfoResponse) ProtoMessage() {}

func (x *TriggerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TriggerInfoResponse) GetNames() []string {
	if x != nil {
		return x.xxx_hidden_Names
	}
	return nil
}

func (x *TriggerInfoResponse) SetNames(v []string) {
	x.xxx_hidden_Names = v
}

type TriggerInfoResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Names []string
}

func (b0 TriggerInfoResponse_builder) Build() *TriggerInfoResponse {
	m0 := &TriggerInfoResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Names = b.Names
	return m0
}

type Envelope struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Sender    *Member                `protobuf:"bytes,10,opt,name=sender"`
	xxx_hidden_Recipient *Members               `protobuf:"bytes,11,opt,name=recipient"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Envelope) GetSender() *Member {
	if x != nil {
		return x.xxx_hidden_Sender
	}
	return nil
}

func (x *Envelope) GetRecipient() *Members {
	if x != nil {
		return x.xxx_hidden_Recipient
	}
	return nil
}

func (x *Envelope) SetSender(v *Member) {
	x.xxx_hidden_Sender = v
}

func (x *Envelope) SetRecipient(v *Members) {
	x.xxx_hidden_Recipient = v
}

func (x *Envelope) HasSender() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Sender != nil
}

func (x *Envelope) HasRecipient() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Recipient != nil
}

func (x *Envelope) ClearSender() {
	x.xxx_hidden_Sender = nil
}

func (x *Envelope) ClearRecipient() {
	x.xxx_hidden_Recipient = nil
}

type Envelope_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Sender    *Member
	Recipient *Members
}

func (b0 Envelope_builder) Build() *Envelope {
	m0 := &Envelope{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Sender = b.Sender
	x.xxx_hidden_Recipient = b.Recipient
	return m0
}

type Members struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id         []string               `protobuf:"bytes,10,rep,name=id"`
	xxx_hidden_Name       []string               `protobuf:"bytes,11,rep,name=name"`
	xxx_hidden_Capability []string               `protobuf:"bytes,12,rep,name=capability"`
	xxx_hidden_Tag        []string               `protobuf:"bytes,13,rep,name=tag"`
	xxx_hidden_Service    []string               `protobuf:"bytes,14,rep,name=service"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Members) Reset() {
	*x = Members{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Members) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Members) ProtoMessage() {}

func (x *Members) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Members) GetId() []string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *Members) GetName() []string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return nil
}

func (x *Members) GetCapability() []string {
	if x != nil {
		return x.xxx_hidden_Capability
	}
	return nil
}

func (x *Members) GetTag() []string {
	if x != nil {
		return x.xxx_hidden_Tag
	}
	return nil
}

func (x *Members) GetService() []string {
	if x != nil {
		return x.xxx_hidden_Service
	}
	return nil
}

func (x *Members) SetId(v []string) {
	x.xxx_hidden_Id = v
}

func (x *Members) SetName(v []string) {
	x.xxx_hidden_Name = v
}

func (x *Members) SetCapability(v []string) {
	x.xxx_hidden_Capability = v
}

func (x *Members) SetTag(v []string) {
	x.xxx_hidden_Tag = v
}

func (x *Members) SetService(v []string) {
	x.xxx_hidden_Service = v
}

type Members_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         []string
	Name       []string
	Capability []string
	Tag        []string
	Service    []string
}

func (b0 Members_builder) Build() *Members {
	m0 := &Members{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Capability = b.Capability
	x.xxx_hidden_Tag = b.Tag
	x.xxx_hidden_Service = b.Service
	return m0
}

type Member struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id           *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_InternalId   *string                `protobuf:"bytes,2,opt,name=internal_id,json=internalId"`
	xxx_hidden_Name         *string                `protobuf:"bytes,10,opt,name=name"`
	xxx_hidden_Capability   []string               `protobuf:"bytes,11,rep,name=capability"`
	xxx_hidden_Tag          []string               `protobuf:"bytes,12,rep,name=tag"`
	xxx_hidden_Service      []string               `protobuf:"bytes,13,rep,name=service"`
	xxx_hidden_Version      *string                `protobuf:"bytes,90,opt,name=version"`
	xxx_hidden_GitHash      *string                `protobuf:"bytes,91,opt,name=git_hash,json=gitHash"`
	xxx_hidden_BuildDate    *string                `protobuf:"bytes,92,opt,name=build_date,json=buildDate"`
	xxx_hidden_LastSeen     *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=last_seen,json=lastSeen"`
	xxx_hidden_PingLatency  *durationpb.Duration   `protobuf:"bytes,102,opt,name=ping_latency,json=pingLatency"`
	xxx_hidden_InfoStat     *InfoStat              `protobuf:"bytes,200,opt,name=info_stat,json=infoStat"`
	xxx_hidden_SystemStart  *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=system_start,json=systemStart"`
	xxx_hidden_ProcessStart *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=process_start,json=processStart"`
	xxx_hidden_Active       bool                   `protobuf:"varint,203,opt,name=active"`
	xxx_hidden_LastSeenAgo  *string                `protobuf:"bytes,1001,opt,name=last_seen_ago,json=lastSeenAgo"`
	xxx_hidden_Latency      *string                `protobuf:"bytes,1003,opt,name=latency"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Member) Reset() {
	*x = Member{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Member) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Member) GetInternalId() string {
	if x != nil {
		if x.xxx_hidden_InternalId != nil {
			return *x.xxx_hidden_InternalId
		}
		return ""
	}
	return ""
}

func (x *Member) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Member) GetCapability() []string {
	if x != nil {
		return x.xxx_hidden_Capability
	}
	return nil
}

func (x *Member) GetTag() []string {
	if x != nil {
		return x.xxx_hidden_Tag
	}
	return nil
}

func (x *Member) GetService() []string {
	if x != nil {
		return x.xxx_hidden_Service
	}
	return nil
}

func (x *Member) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *Member) GetGitHash() string {
	if x != nil {
		if x.xxx_hidden_GitHash != nil {
			return *x.xxx_hidden_GitHash
		}
		return ""
	}
	return ""
}

func (x *Member) GetBuildDate() string {
	if x != nil {
		if x.xxx_hidden_BuildDate != nil {
			return *x.xxx_hidden_BuildDate
		}
		return ""
	}
	return ""
}

func (x *Member) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastSeen
	}
	return nil
}

func (x *Member) GetPingLatency() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_PingLatency
	}
	return nil
}

func (x *Member) GetInfoStat() *InfoStat {
	if x != nil {
		return x.xxx_hidden_InfoStat
	}
	return nil
}

func (x *Member) GetSystemStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_SystemStart
	}
	return nil
}

func (x *Member) GetProcessStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ProcessStart
	}
	return nil
}

func (x *Member) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *Member) GetLastSeenAgo() string {
	if x != nil {
		if x.xxx_hidden_LastSeenAgo != nil {
			return *x.xxx_hidden_LastSeenAgo
		}
		return ""
	}
	return ""
}

func (x *Member) GetLatency() string {
	if x != nil {
		if x.xxx_hidden_Latency != nil {
			return *x.xxx_hidden_Latency
		}
		return ""
	}
	return ""
}

func (x *Member) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 17)
}

func (x *Member) SetInternalId(v string) {
	x.xxx_hidden_InternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 17)
}

func (x *Member) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 17)
}

func (x *Member) SetCapability(v []string) {
	x.xxx_hidden_Capability = v
}

func (x *Member) SetTag(v []string) {
	x.xxx_hidden_Tag = v
}

func (x *Member) SetService(v []string) {
	x.xxx_hidden_Service = v
}

func (x *Member) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 17)
}

func (x *Member) SetGitHash(v string) {
	x.xxx_hidden_GitHash = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 17)
}

func (x *Member) SetBuildDate(v string) {
	x.xxx_hidden_BuildDate = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 17)
}

func (x *Member) SetLastSeen(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastSeen = v
}

func (x *Member) SetPingLatency(v *durationpb.Duration) {
	x.xxx_hidden_PingLatency = v
}

func (x *Member) SetInfoStat(v *InfoStat) {
	x.xxx_hidden_InfoStat = v
}

func (x *Member) SetSystemStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_SystemStart = v
}

func (x *Member) SetProcessStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_ProcessStart = v
}

func (x *Member) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 17)
}

func (x *Member) SetLastSeenAgo(v string) {
	x.xxx_hidden_LastSeenAgo = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 17)
}

func (x *Member) SetLatency(v string) {
	x.xxx_hidden_Latency = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 17)
}

func (x *Member) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Member) HasInternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Member) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Member) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Member) HasGitHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Member) HasBuildDate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Member) HasLastSeen() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastSeen != nil
}

func (x *Member) HasPingLatency() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PingLatency != nil
}

func (x *Member) HasInfoStat() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InfoStat != nil
}

func (x *Member) HasSystemStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SystemStart != nil
}

func (x *Member) HasProcessStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ProcessStart != nil
}

func (x *Member) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Member) HasLastSeenAgo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Member) HasLatency() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Member) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Member) ClearInternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_InternalId = nil
}

func (x *Member) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *Member) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Version = nil
}

func (x *Member) ClearGitHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_GitHash = nil
}

func (x *Member) ClearBuildDate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_BuildDate = nil
}

func (x *Member) ClearLastSeen() {
	x.xxx_hidden_LastSeen = nil
}

func (x *Member) ClearPingLatency() {
	x.xxx_hidden_PingLatency = nil
}

func (x *Member) ClearInfoStat() {
	x.xxx_hidden_InfoStat = nil
}

func (x *Member) ClearSystemStart() {
	x.xxx_hidden_SystemStart = nil
}

func (x *Member) ClearProcessStart() {
	x.xxx_hidden_ProcessStart = nil
}

func (x *Member) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_Active = false
}

func (x *Member) ClearLastSeenAgo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_LastSeenAgo = nil
}

func (x *Member) ClearLatency() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_Latency = nil
}

type Member_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id           *string
	InternalId   *string
	Name         *string
	Capability   []string
	Tag          []string
	Service      []string
	Version      *string
	GitHash      *string
	BuildDate    *string
	LastSeen     *timestamppb.Timestamp
	PingLatency  *durationpb.Duration
	InfoStat     *InfoStat
	SystemStart  *timestamppb.Timestamp
	ProcessStart *timestamppb.Timestamp
	Active       *bool
	// Only used in rendering host lists, not transferred over the wire.
	LastSeenAgo *string
	Latency     *string
}

func (b0 Member_builder) Build() *Member {
	m0 := &Member{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 17)
		x.xxx_hidden_Id = b.Id
	}
	if b.InternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 17)
		x.xxx_hidden_InternalId = b.InternalId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 17)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Capability = b.Capability
	x.xxx_hidden_Tag = b.Tag
	x.xxx_hidden_Service = b.Service
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 17)
		x.xxx_hidden_Version = b.Version
	}
	if b.GitHash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 17)
		x.xxx_hidden_GitHash = b.GitHash
	}
	if b.BuildDate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 17)
		x.xxx_hidden_BuildDate = b.BuildDate
	}
	x.xxx_hidden_LastSeen = b.LastSeen
	x.xxx_hidden_PingLatency = b.PingLatency
	x.xxx_hidden_InfoStat = b.InfoStat
	x.xxx_hidden_SystemStart = b.SystemStart
	x.xxx_hidden_ProcessStart = b.ProcessStart
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 17)
		x.xxx_hidden_Active = *b.Active
	}
	if b.LastSeenAgo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 17)
		x.xxx_hidden_LastSeenAgo = b.LastSeenAgo
	}
	if b.Latency != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 17)
		x.xxx_hidden_Latency = b.Latency
	}
	return m0
}

type InfoStat struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_Hostname        *string                `protobuf:"bytes,21,opt,name=hostname"`
	xxx_hidden_Uptime          uint64                 `protobuf:"varint,22,opt,name=uptime"`
	xxx_hidden_BootTime        uint64                 `protobuf:"varint,23,opt,name=boot_time,json=bootTime"`
	xxx_hidden_Procs           uint64                 `protobuf:"varint,24,opt,name=procs"`
	xxx_hidden_Os              *string                `protobuf:"bytes,25,opt,name=os"`
	xxx_hidden_Platform        *string                `protobuf:"bytes,26,opt,name=platform"`
	xxx_hidden_PlatformFamily  *string                `protobuf:"bytes,27,opt,name=platform_family,json=platformFamily"`
	xxx_hidden_PlatformVersion *string                `protobuf:"bytes,28,opt,name=platform_version,json=platformVersion"`
	xxx_hidden_KernelVersion   *string                `protobuf:"bytes,29,opt,name=kernel_version,json=kernelVersion"`
	xxx_hidden_KernelArch      *string                `protobuf:"bytes,30,opt,name=kernel_arch,json=kernelArch"`
	xxx_hidden_VirtSystem      *string                `protobuf:"bytes,31,opt,name=virt_system,json=virtSystem"`
	xxx_hidden_VirtRole        *string                `protobuf:"bytes,32,opt,name=virt_role,json=virtRole"`
	xxx_hidden_HostId          *string                `protobuf:"bytes,33,opt,name=host_id,json=hostId"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *InfoStat) Reset() {
	*x = InfoStat{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoStat) ProtoMessage() {}

func (x *InfoStat) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InfoStat) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *InfoStat) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetUptime() uint64 {
	if x != nil {
		return x.xxx_hidden_Uptime
	}
	return 0
}

func (x *InfoStat) GetBootTime() uint64 {
	if x != nil {
		return x.xxx_hidden_BootTime
	}
	return 0
}

func (x *InfoStat) GetProcs() uint64 {
	if x != nil {
		return x.xxx_hidden_Procs
	}
	return 0
}

func (x *InfoStat) GetOs() string {
	if x != nil {
		if x.xxx_hidden_Os != nil {
			return *x.xxx_hidden_Os
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetPlatform() string {
	if x != nil {
		if x.xxx_hidden_Platform != nil {
			return *x.xxx_hidden_Platform
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetPlatformFamily() string {
	if x != nil {
		if x.xxx_hidden_PlatformFamily != nil {
			return *x.xxx_hidden_PlatformFamily
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetPlatformVersion() string {
	if x != nil {
		if x.xxx_hidden_PlatformVersion != nil {
			return *x.xxx_hidden_PlatformVersion
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetKernelVersion() string {
	if x != nil {
		if x.xxx_hidden_KernelVersion != nil {
			return *x.xxx_hidden_KernelVersion
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetKernelArch() string {
	if x != nil {
		if x.xxx_hidden_KernelArch != nil {
			return *x.xxx_hidden_KernelArch
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetVirtSystem() string {
	if x != nil {
		if x.xxx_hidden_VirtSystem != nil {
			return *x.xxx_hidden_VirtSystem
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetVirtRole() string {
	if x != nil {
		if x.xxx_hidden_VirtRole != nil {
			return *x.xxx_hidden_VirtRole
		}
		return ""
	}
	return ""
}

func (x *InfoStat) GetHostId() string {
	if x != nil {
		if x.xxx_hidden_HostId != nil {
			return *x.xxx_hidden_HostId
		}
		return ""
	}
	return ""
}

func (x *InfoStat) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *InfoStat) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 14)
}

func (x *InfoStat) SetUptime(v uint64) {
	x.xxx_hidden_Uptime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 14)
}

func (x *InfoStat) SetBootTime(v uint64) {
	x.xxx_hidden_BootTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 14)
}

func (x *InfoStat) SetProcs(v uint64) {
	x.xxx_hidden_Procs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 14)
}

func (x *InfoStat) SetOs(v string) {
	x.xxx_hidden_Os = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 14)
}

func (x *InfoStat) SetPlatform(v string) {
	x.xxx_hidden_Platform = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 14)
}

func (x *InfoStat) SetPlatformFamily(v string) {
	x.xxx_hidden_PlatformFamily = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 14)
}

func (x *InfoStat) SetPlatformVersion(v string) {
	x.xxx_hidden_PlatformVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 14)
}

func (x *InfoStat) SetKernelVersion(v string) {
	x.xxx_hidden_KernelVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 14)
}

func (x *InfoStat) SetKernelArch(v string) {
	x.xxx_hidden_KernelArch = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 14)
}

func (x *InfoStat) SetVirtSystem(v string) {
	x.xxx_hidden_VirtSystem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 14)
}

func (x *InfoStat) SetVirtRole(v string) {
	x.xxx_hidden_VirtRole = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 14)
}

func (x *InfoStat) SetHostId(v string) {
	x.xxx_hidden_HostId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 14)
}

func (x *InfoStat) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *InfoStat) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InfoStat) HasUptime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InfoStat) HasBootTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InfoStat) HasProcs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *InfoStat) HasOs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *InfoStat) HasPlatform() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *InfoStat) HasPlatformFamily() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *InfoStat) HasPlatformVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *InfoStat) HasKernelVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *InfoStat) HasKernelArch() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *InfoStat) HasVirtSystem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *InfoStat) HasVirtRole() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *InfoStat) HasHostId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *InfoStat) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *InfoStat) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Hostname = nil
}

func (x *InfoStat) ClearUptime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Uptime = 0
}

func (x *InfoStat) ClearBootTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_BootTime = 0
}

func (x *InfoStat) ClearProcs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Procs = 0
}

func (x *InfoStat) ClearOs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Os = nil
}

func (x *InfoStat) ClearPlatform() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Platform = nil
}

func (x *InfoStat) ClearPlatformFamily() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_PlatformFamily = nil
}

func (x *InfoStat) ClearPlatformVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_PlatformVersion = nil
}

func (x *InfoStat) ClearKernelVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_KernelVersion = nil
}

func (x *InfoStat) ClearKernelArch() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_KernelArch = nil
}

func (x *InfoStat) ClearVirtSystem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_VirtSystem = nil
}

func (x *InfoStat) ClearVirtRole() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_VirtRole = nil
}

func (x *InfoStat) ClearHostId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_HostId = nil
}

type InfoStat_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp *timestamppb.Timestamp
	Hostname  *string
	Uptime    *uint64
	BootTime  *uint64
	// number of processes
	Procs *uint64
	// ex: freebsd, linux
	Os *string
	// ex: ubuntu, linuxmint
	Platform *string
	// ex: debian, rhel
	PlatformFamily *string
	// version of the complete OS
	PlatformVersion *string
	// version of the OS kernel (if available)
	KernelVersion *string
	// native cpu architecture queried at runtime, as returned by `uname -m` or empty string in case of error
	KernelArch *string
	VirtSystem *string
	// guest or host
	VirtRole *string
	// ex: uuid
	HostId *string
}

func (b0 InfoStat_builder) Build() *InfoStat {
	m0 := &InfoStat{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 14)
		x.xxx_hidden_Hostname = b.Hostname
	}
	if b.Uptime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 14)
		x.xxx_hidden_Uptime = *b.Uptime
	}
	if b.BootTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 14)
		x.xxx_hidden_BootTime = *b.BootTime
	}
	if b.Procs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 14)
		x.xxx_hidden_Procs = *b.Procs
	}
	if b.Os != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 14)
		x.xxx_hidden_Os = b.Os
	}
	if b.Platform != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 14)
		x.xxx_hidden_Platform = b.Platform
	}
	if b.PlatformFamily != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 14)
		x.xxx_hidden_PlatformFamily = b.PlatformFamily
	}
	if b.PlatformVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 14)
		x.xxx_hidden_PlatformVersion = b.PlatformVersion
	}
	if b.KernelVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 14)
		x.xxx_hidden_KernelVersion = b.KernelVersion
	}
	if b.KernelArch != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 14)
		x.xxx_hidden_KernelArch = b.KernelArch
	}
	if b.VirtSystem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 14)
		x.xxx_hidden_VirtSystem = b.VirtSystem
	}
	if b.VirtRole != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 14)
		x.xxx_hidden_VirtRole = b.VirtRole
	}
	if b.HostId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 14)
		x.xxx_hidden_HostId = b.HostId
	}
	return m0
}

type Message struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Envelope *Envelope              `protobuf:"bytes,1,opt,name=envelope"`
	xxx_hidden_Message  isMessage_Message      `protobuf_oneof:"message"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Message) GetEnvelope() *Envelope {
	if x != nil {
		return x.xxx_hidden_Envelope
	}
	return nil
}

func (x *Message) GetRegisterMessage() *RegisterMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*message_RegisterMessage); ok {
			return x.RegisterMessage
		}
	}
	return nil
}

func (x *Message) GetPingMessage() *PingMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*message_PingMessage); ok {
			return x.PingMessage
		}
	}
	return nil
}

func (x *Message) GetPongMessage() *PongMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*message_PongMessage); ok {
			return x.PongMessage
		}
	}
	return nil
}

func (x *Message) GetEventMessage() *EventMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*message_EventMessage); ok {
			return x.EventMessage
		}
	}
	return nil
}

func (x *Message) GetTriggerAllMessage() *TriggerAllMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*message_TriggerAllMessage); ok {
			return x.TriggerAllMessage
		}
	}
	return nil
}

func (x *Message) GetRepeatRegistrationMessage() *RepeatRegistrationMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*message_RepeatRegistrationMessage); ok {
			return x.RepeatRegistrationMessage
		}
	}
	return nil
}

func (x *Message) GetMemberUpdateMessage() *MemberUpdateMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*message_MemberUpdateMessage); ok {
			return x.MemberUpdateMessage
		}
	}
	return nil
}

func (x *Message) SetEnvelope(v *Envelope) {
	x.xxx_hidden_Envelope = v
}

func (x *Message) SetRegisterMessage(v *RegisterMessage) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &message_RegisterMessage{v}
}

func (x *Message) SetPingMessage(v *PingMessage) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &message_PingMessage{v}
}

func (x *Message) SetPongMessage(v *PongMessage) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &message_PongMessage{v}
}

func (x *Message) SetEventMessage(v *EventMessage) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &message_EventMessage{v}
}

func (x *Message) SetTriggerAllMessage(v *TriggerAllMessage) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &message_TriggerAllMessage{v}
}

func (x *Message) SetRepeatRegistrationMessage(v *RepeatRegistrationMessage) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &message_RepeatRegistrationMessage{v}
}

func (x *Message) SetMemberUpdateMessage(v *MemberUpdateMessage) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &message_MemberUpdateMessage{v}
}

func (x *Message) HasEnvelope() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Envelope != nil
}

func (x *Message) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Message != nil
}

func (x *Message) HasRegisterMessage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*message_RegisterMessage)
	return ok
}

func (x *Message) HasPingMessage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*message_PingMessage)
	return ok
}

func (x *Message) HasPongMessage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*message_PongMessage)
	return ok
}

func (x *Message) HasEventMessage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*message_EventMessage)
	return ok
}

func (x *Message) HasTriggerAllMessage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*message_TriggerAllMessage)
	return ok
}

func (x *Message) HasRepeatRegistrationMessage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*message_RepeatRegistrationMessage)
	return ok
}

func (x *Message) HasMemberUpdateMessage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*message_MemberUpdateMessage)
	return ok
}

func (x *Message) ClearEnvelope() {
	x.xxx_hidden_Envelope = nil
}

func (x *Message) ClearMessage() {
	x.xxx_hidden_Message = nil
}

func (x *Message) ClearRegisterMessage() {
	if _, ok := x.xxx_hidden_Message.(*message_RegisterMessage); ok {
		x.xxx_hidden_Message = nil
	}
}

func (x *Message) ClearPingMessage() {
	if _, ok := x.xxx_hidden_Message.(*message_PingMessage); ok {
		x.xxx_hidden_Message = nil
	}
}

func (x *Message) ClearPongMessage() {
	if _, ok := x.xxx_hidden_Message.(*message_PongMessage); ok {
		x.xxx_hidden_Message = nil
	}
}

func (x *Message) ClearEventMessage() {
	if _, ok := x.xxx_hidden_Message.(*message_EventMessage); ok {
		x.xxx_hidden_Message = nil
	}
}

func (x *Message) ClearTriggerAllMessage() {
	if _, ok := x.xxx_hidden_Message.(*message_TriggerAllMessage); ok {
		x.xxx_hidden_Message = nil
	}
}

func (x *Message) ClearRepeatRegistrationMessage() {
	if _, ok := x.xxx_hidden_Message.(*message_RepeatRegistrationMessage); ok {
		x.xxx_hidden_Message = nil
	}
}

func (x *Message) ClearMemberUpdateMessage() {
	if _, ok := x.xxx_hidden_Message.(*message_MemberUpdateMessage); ok {
		x.xxx_hidden_Message = nil
	}
}

const Message_Message_not_set_case case_Message_Message = 0
const Message_RegisterMessage_case case_Message_Message = 100
const Message_PingMessage_case case_Message_Message = 101
const Message_PongMessage_case case_Message_Message = 102
const Message_EventMessage_case case_Message_Message = 103
const Message_TriggerAllMessage_case case_Message_Message = 104
const Message_RepeatRegistrationMessage_case case_Message_Message = 105
const Message_MemberUpdateMessage_case case_Message_Message = 106

func (x *Message) WhichMessage() case_Message_Message {
	if x == nil {
		return Message_Message_not_set_case
	}
	switch x.xxx_hidden_Message.(type) {
	case *message_RegisterMessage:
		return Message_RegisterMessage_case
	case *message_PingMessage:
		return Message_PingMessage_case
	case *message_PongMessage:
		return Message_PongMessage_case
	case *message_EventMessage:
		return Message_EventMessage_case
	case *message_TriggerAllMessage:
		return Message_TriggerAllMessage_case
	case *message_RepeatRegistrationMessage:
		return Message_RepeatRegistrationMessage_case
	case *message_MemberUpdateMessage:
		return Message_MemberUpdateMessage_case
	default:
		return Message_Message_not_set_case
	}
}

type Message_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Envelope *Envelope
	// Fields of oneof xxx_hidden_Message:
	RegisterMessage           *RegisterMessage
	PingMessage               *PingMessage
	PongMessage               *PongMessage
	EventMessage              *EventMessage
	TriggerAllMessage         *TriggerAllMessage
	RepeatRegistrationMessage *RepeatRegistrationMessage
	MemberUpdateMessage       *MemberUpdateMessage
	// -- end of xxx_hidden_Message
}

func (b0 Message_builder) Build() *Message {
	m0 := &Message{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Envelope = b.Envelope
	if b.RegisterMessage != nil {
		x.xxx_hidden_Message = &message_RegisterMessage{b.RegisterMessage}
	}
	if b.PingMessage != nil {
		x.xxx_hidden_Message = &message_PingMessage{b.PingMessage}
	}
	if b.PongMessage != nil {
		x.xxx_hidden_Message = &message_PongMessage{b.PongMessage}
	}
	if b.EventMessage != nil {
		x.xxx_hidden_Message = &message_EventMessage{b.EventMessage}
	}
	if b.TriggerAllMessage != nil {
		x.xxx_hidden_Message = &message_TriggerAllMessage{b.TriggerAllMessage}
	}
	if b.RepeatRegistrationMessage != nil {
		x.xxx_hidden_Message = &message_RepeatRegistrationMessage{b.RepeatRegistrationMessage}
	}
	if b.MemberUpdateMessage != nil {
		x.xxx_hidden_Message = &message_MemberUpdateMessage{b.MemberUpdateMessage}
	}
	return m0
}

type case_Message_Message protoreflect.FieldNumber

func (x case_Message_Message) String() string {
	md := file_github_com_na4ma4_rsca_api_common_proto_msgTypes[7].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMessage_Message interface {
	isMessage_Message()
}

type message_RegisterMessage struct {
	RegisterMessage *RegisterMessage `protobuf:"bytes,100,opt,name=register_message,json=registerMessage,oneof"`
}

type message_PingMessage struct {
	PingMessage *PingMessage `protobuf:"bytes,101,opt,name=ping_message,json=pingMessage,oneof"`
}

type message_PongMessage struct {
	PongMessage *PongMessage `protobuf:"bytes,102,opt,name=pong_message,json=pongMessage,oneof"`
}

type message_EventMessage struct {
	EventMessage *EventMessage `protobuf:"bytes,103,opt,name=event_message,json=eventMessage,oneof"`
}

type message_TriggerAllMessage struct {
	TriggerAllMessage *TriggerAllMessage `protobuf:"bytes,104,opt,name=trigger_all_message,json=triggerAllMessage,oneof"`
}

type message_RepeatRegistrationMessage struct {
	RepeatRegistrationMessage *RepeatRegistrationMessage `protobuf:"bytes,105,opt,name=repeat_registration_message,json=repeatRegistrationMessage,oneof"`
}

type message_MemberUpdateMessage struct {
	MemberUpdateMessage *MemberUpdateMessage `protobuf:"bytes,106,opt,name=member_update_message,json=memberUpdateMessage,oneof"`
}

func (*message_RegisterMessage) isMessage_Message() {}

func (*message_PingMessage) isMessage_Message() {}

func (*message_PongMessage) isMessage_Message() {}

func (*message_EventMessage) isMessage_Message() {}

func (*message_TriggerAllMessage) isMessage_Message() {}

func (*message_RepeatRegistrationMessage) isMessage_Message() {}

func (*message_MemberUpdateMessage) isMessage_Message() {}

type RegisterMessage struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Member *Member                `protobuf:"bytes,1,opt,name=member"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterMessage) Reset() {
	*x = RegisterMessage{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMessage) ProtoMessage() {}

func (x *RegisterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterMessage) GetMember() *Member {
	if x != nil {
		return x.xxx_hidden_Member
	}
	return nil
}

func (x *RegisterMessage) SetMember(v *Member) {
	x.xxx_hidden_Member = v
}

func (x *RegisterMessage) HasMember() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Member != nil
}

func (x *RegisterMessage) ClearMember() {
	x.xxx_hidden_Member = nil
}

type RegisterMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Member *Member
}

func (b0 RegisterMessage_builder) Build() *RegisterMessage {
	m0 := &RegisterMessage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Member = b.Member
	return m0
}

type PingMessage struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_StreamId    *string                `protobuf:"bytes,2,opt,name=stream_id,json=streamId"`
	xxx_hidden_Ts          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ts"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PingMessage) Reset() {
	*x = PingMessage{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMessage) ProtoMessage() {}

func (x *PingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PingMessage) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *PingMessage) GetStreamId() string {
	if x != nil {
		if x.xxx_hidden_StreamId != nil {
			return *x.xxx_hidden_StreamId
		}
		return ""
	}
	return ""
}

func (x *PingMessage) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Ts
	}
	return nil
}

func (x *PingMessage) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *PingMessage) SetStreamId(v string) {
	x.xxx_hidden_StreamId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *PingMessage) SetTs(v *timestamppb.Timestamp) {
	x.xxx_hidden_Ts = v
}

func (x *PingMessage) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PingMessage) HasStreamId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PingMessage) HasTs() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ts != nil
}

func (x *PingMessage) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *PingMessage) ClearStreamId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StreamId = nil
}

func (x *PingMessage) ClearTs() {
	x.xxx_hidden_Ts = nil
}

type PingMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id       *string
	StreamId *string
	Ts       *timestamppb.Timestamp
}

func (b0 PingMessage_builder) Build() *PingMessage {
	m0 := &PingMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.StreamId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_StreamId = b.StreamId
	}
	x.xxx_hidden_Ts = b.Ts
	return m0
}

type PongMessage struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_StreamId    *string                `protobuf:"bytes,2,opt,name=stream_id,json=streamId"`
	xxx_hidden_Ts          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ts"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PongMessage) Reset() {
	*x = PongMessage{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongMessage) ProtoMessage() {}

func (x *PongMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PongMessage) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *PongMessage) GetStreamId() string {
	if x != nil {
		if x.xxx_hidden_StreamId != nil {
			return *x.xxx_hidden_StreamId
		}
		return ""
	}
	return ""
}

func (x *PongMessage) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Ts
	}
	return nil
}

func (x *PongMessage) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *PongMessage) SetStreamId(v string) {
	x.xxx_hidden_StreamId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *PongMessage) SetTs(v *timestamppb.Timestamp) {
	x.xxx_hidden_Ts = v
}

func (x *PongMessage) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PongMessage) HasStreamId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PongMessage) HasTs() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ts != nil
}

func (x *PongMessage) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *PongMessage) ClearStreamId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StreamId = nil
}

func (x *PongMessage) ClearTs() {
	x.xxx_hidden_Ts = nil
}

type PongMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id       *string
	StreamId *string
	Ts       *timestamppb.Timestamp
}

func (b0 PongMessage_builder) Build() *PongMessage {
	m0 := &PongMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.StreamId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_StreamId = b.StreamId
	}
	x.xxx_hidden_Ts = b.Ts
	return m0
}

type TriggerAllMessage struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TriggerAllMessage) Reset() {
	*x = TriggerAllMessage{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerAllMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAllMessage) ProtoMessage() {}

func (x *TriggerAllMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TriggerAllMessage) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *TriggerAllMessage) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *TriggerAllMessage) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TriggerAllMessage) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type TriggerAllMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 TriggerAllMessage_builder) Build() *TriggerAllMessage {
	m0 := &TriggerAllMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type RepeatRegistrationMessage struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RepeatRegistrationMessage) Reset() {
	*x = RepeatRegistrationMessage{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepeatRegistrationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatRegistrationMessage) ProtoMessage() {}

func (x *RepeatRegistrationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RepeatRegistrationMessage) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *RepeatRegistrationMessage) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RepeatRegistrationMessage) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RepeatRegistrationMessage) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type RepeatRegistrationMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 RepeatRegistrationMessage_builder) Build() *RepeatRegistrationMessage {
	m0 := &RepeatRegistrationMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type MemberUpdateMessage struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Member *Member                `protobuf:"bytes,1,opt,name=member"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MemberUpdateMessage) Reset() {
	*x = MemberUpdateMessage{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberUpdateMessage) ProtoMessage() {}

func (x *MemberUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemberUpdateMessage) GetMember() *Member {
	if x != nil {
		return x.xxx_hidden_Member
	}
	return nil
}

func (x *MemberUpdateMessage) SetMember(v *Member) {
	x.xxx_hidden_Member = v
}

func (x *MemberUpdateMessage) HasMember() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Member != nil
}

func (x *MemberUpdateMessage) ClearMember() {
	x.xxx_hidden_Member = nil
}

type MemberUpdateMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Member *Member
}

func (b0 MemberUpdateMessage_builder) Build() *MemberUpdateMessage {
	m0 := &MemberUpdateMessage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Member = b.Member
	return m0
}

type EventMessage struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Hostname         *string                `protobuf:"bytes,1,opt,name=hostname"`
	xxx_hidden_Type             CheckType              `protobuf:"varint,2,opt,name=type,enum=rsca.api.CheckType"`
	xxx_hidden_Check            *string                `protobuf:"bytes,3,opt,name=check"`
	xxx_hidden_Status           Status                 `protobuf:"varint,4,opt,name=status,enum=rsca.api.Status"`
	xxx_hidden_Output           *string                `protobuf:"bytes,5,opt,name=output"`
	xxx_hidden_OutputError      *string                `protobuf:"bytes,10,opt,name=output_error,json=outputError"`
	xxx_hidden_Perfdata         *string                `protobuf:"bytes,6,opt,name=perfdata"`
	xxx_hidden_RequestTimestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=request_timestamp,json=requestTimestamp"`
	xxx_hidden_Retries          int32                  `protobuf:"varint,8,opt,name=retries"`
	xxx_hidden_Id               *string                `protobuf:"bytes,9,opt,name=id"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *EventMessage) Reset() {
	*x = EventMessage{}
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessage) ProtoMessage() {}

func (x *EventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_rsca_api_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventMessage) GetHostname() string {
	if x != nil {
		if x.xxx_hidden_Hostname != nil {
			return *x.xxx_hidden_Hostname
		}
		return ""
	}
	return ""
}

func (x *EventMessage) GetType() CheckType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return CheckType_HOST
}

func (x *EventMessage) GetCheck() string {
	if x != nil {
		if x.xxx_hidden_Check != nil {
			return *x.xxx_hidden_Check
		}
		return ""
	}
	return ""
}

func (x *EventMessage) GetStatus() Status {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Status
		}
	}
	return Status_OK
}

func (x *EventMessage) GetOutput() string {
	if x != nil {
		if x.xxx_hidden_Output != nil {
			return *x.xxx_hidden_Output
		}
		return ""
	}
	return ""
}

func (x *EventMessage) GetOutputError() string {
	if x != nil {
		if x.xxx_hidden_OutputError != nil {
			return *x.xxx_hidden_OutputError
		}
		return ""
	}
	return ""
}

func (x *EventMessage) GetPerfdata() string {
	if x != nil {
		if x.xxx_hidden_Perfdata != nil {
			return *x.xxx_hidden_Perfdata
		}
		return ""
	}
	return ""
}

func (x *EventMessage) GetRequestTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RequestTimestamp
	}
	return nil
}

func (x *EventMessage) GetRetries() int32 {
	if x != nil {
		return x.xxx_hidden_Retries
	}
	return 0
}

func (x *EventMessage) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *EventMessage) SetHostname(v string) {
	x.xxx_hidden_Hostname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *EventMessage) SetType(v CheckType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *EventMessage) SetCheck(v string) {
	x.xxx_hidden_Check = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *EventMessage) SetStatus(v Status) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *EventMessage) SetOutput(v string) {
	x.xxx_hidden_Output = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *EventMessage) SetOutputError(v string) {
	x.xxx_hidden_OutputError = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *EventMessage) SetPerfdata(v string) {
	x.xxx_hidden_Perfdata = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *EventMessage) SetRequestTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_RequestTimestamp = v
}

func (x *EventMessage) SetRetries(v int32) {
	x.xxx_hidden_Retries = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *EventMessage) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *EventMessage) HasHostname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EventMessage) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EventMessage) HasCheck() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EventMessage) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EventMessage) HasOutput() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EventMessage) HasOutputError() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *EventMessage) HasPerfdata() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *EventMessage) HasRequestTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RequestTimestamp != nil
}

func (x *EventMessage) HasRetries() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *EventMessage) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *EventMessage) ClearHostname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Hostname = nil
}

func (x *EventMessage) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = CheckType_HOST
}

func (x *EventMessage) ClearCheck() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Check = nil
}

func (x *EventMessage) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Status = Status_OK
}

func (x *EventMessage) ClearOutput() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Output = nil
}

func (x *EventMessage) ClearOutputError() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OutputError = nil
}

func (x *EventMessage) ClearPerfdata() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Perfdata = nil
}

func (x *EventMessage) ClearRequestTimestamp() {
	x.xxx_hidden_RequestTimestamp = nil
}

func (x *EventMessage) ClearRetries() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Retries = 0
}

func (x *EventMessage) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Id = nil
}

type EventMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Hostname         *string
	Type             *CheckType
	Check            *string
	Status           *Status
	Output           *string
	OutputError      *string
	Perfdata         *string
	RequestTimestamp *timestamppb.Timestamp
	Retries          *int32
	Id               *string
}

func (b0 EventMessage_builder) Build() *EventMessage {
	m0 := &EventMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Hostname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Hostname = b.Hostname
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Type = *b.Type
	}
	if b.Check != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_Check = b.Check
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Output != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_Output = b.Output
	}
	if b.OutputError != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_OutputError = b.OutputError
	}
	if b.Perfdata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_Perfdata = b.Perfdata
	}
	x.xxx_hidden_RequestTimestamp = b.RequestTimestamp
	if b.Retries != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_Retries = *b.Retries
	}
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

var File_github_com_na4ma4_rsca_api_common_proto protoreflect.FileDescriptor

const file_github_com_na4ma4_rsca_api_common_proto_rawDesc = "" +
	"\n" +
	"'github.com/na4ma4/rsca/api/common.proto\x12\brsca.api\x1a!google/protobuf/go_features.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\a\n" +
	"\x05Empty\"*\n" +
	"\x12TriggerAllResponse\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"+\n" +
	"\x13TriggerInfoResponse\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"e\n" +
	"\bEnvelope\x12(\n" +
	"\x06sender\x18\n" +
	" \x01(\v2\x10.rsca.api.MemberR\x06sender\x12/\n" +
	"\trecipient\x18\v \x01(\v2\x11.rsca.api.MembersR\trecipient\"y\n" +
	"\aMembers\x12\x0e\n" +
	"\x02id\x18\n" +
	" \x03(\tR\x02id\x12\x12\n" +
	"\x04name\x18\v \x03(\tR\x04name\x12\x1e\n" +
	"\n" +
	"capability\x18\f \x03(\tR\n" +
	"capability\x12\x10\n" +
	"\x03tag\x18\r \x03(\tR\x03tag\x12\x18\n" +
	"\aservice\x18\x0e \x03(\tR\aservice\"\xf1\x04\n" +
	"\x06Member\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vinternal_id\x18\x02 \x01(\tR\n" +
	"internalId\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"capability\x18\v \x03(\tR\n" +
	"capability\x12\x10\n" +
	"\x03tag\x18\f \x03(\tR\x03tag\x12\x18\n" +
	"\aservice\x18\r \x03(\tR\aservice\x12\x18\n" +
	"\aversion\x18Z \x01(\tR\aversion\x12\x19\n" +
	"\bgit_hash\x18[ \x01(\tR\agitHash\x12\x1d\n" +
	"\n" +
	"build_date\x18\\ \x01(\tR\tbuildDate\x127\n" +
	"\tlast_seen\x18d \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12<\n" +
	"\fping_latency\x18f \x01(\v2\x19.google.protobuf.DurationR\vpingLatency\x120\n" +
	"\tinfo_stat\x18\xc8\x01 \x01(\v2\x12.rsca.api.InfoStatR\binfoStat\x12>\n" +
	"\fsystem_start\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vsystemStart\x12@\n" +
	"\rprocess_start\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampR\fprocessStart\x12\x17\n" +
	"\x06active\x18\xcb\x01 \x01(\bR\x06active\x12#\n" +
	"\rlast_seen_ago\x18\xe9\a \x01(\tR\vlastSeenAgo\x12\x19\n" +
	"\alatency\x18\xeb\a \x01(\tR\alatency\"\xca\x03\n" +
	"\bInfoStat\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1a\n" +
	"\bhostname\x18\x15 \x01(\tR\bhostname\x12\x16\n" +
	"\x06uptime\x18\x16 \x01(\x04R\x06uptime\x12\x1b\n" +
	"\tboot_time\x18\x17 \x01(\x04R\bbootTime\x12\x14\n" +
	"\x05procs\x18\x18 \x01(\x04R\x05procs\x12\x0e\n" +
	"\x02os\x18\x19 \x01(\tR\x02os\x12\x1a\n" +
	"\bplatform\x18\x1a \x01(\tR\bplatform\x12'\n" +
	"\x0fplatform_family\x18\x1b \x01(\tR\x0eplatformFamily\x12)\n" +
	"\x10platform_version\x18\x1c \x01(\tR\x0fplatformVersion\x12%\n" +
	"\x0ekernel_version\x18\x1d \x01(\tR\rkernelVersion\x12\x1f\n" +
	"\vkernel_arch\x18\x1e \x01(\tR\n" +
	"kernelArch\x12\x1f\n" +
	"\vvirt_system\x18\x1f \x01(\tR\n" +
	"virtSystem\x12\x1b\n" +
	"\tvirt_role\x18  \x01(\tR\bvirtRole\x12\x17\n" +
	"\ahost_id\x18! \x01(\tR\x06hostId\"\xce\x04\n" +
	"\aMessage\x12.\n" +
	"\benvelope\x18\x01 \x01(\v2\x12.rsca.api.EnvelopeR\benvelope\x12F\n" +
	"\x10register_message\x18d \x01(\v2\x19.rsca.api.RegisterMessageH\x00R\x0fregisterMessage\x12:\n" +
	"\fping_message\x18e \x01(\v2\x15.rsca.api.PingMessageH\x00R\vpingMessage\x12:\n" +
	"\fpong_message\x18f \x01(\v2\x15.rsca.api.PongMessageH\x00R\vpongMessage\x12=\n" +
	"\revent_message\x18g \x01(\v2\x16.rsca.api.EventMessageH\x00R\feventMessage\x12M\n" +
	"\x13trigger_all_message\x18h \x01(\v2\x1b.rsca.api.TriggerAllMessageH\x00R\x11triggerAllMessage\x12e\n" +
	"\x1brepeat_registration_message\x18i \x01(\v2#.rsca.api.RepeatRegistrationMessageH\x00R\x19repeatRegistrationMessage\x12S\n" +
	"\x15member_update_message\x18j \x01(\v2\x1d.rsca.api.MemberUpdateMessageH\x00R\x13memberUpdateMessageB\t\n" +
	"\amessage\";\n" +
	"\x0fRegisterMessage\x12(\n" +
	"\x06member\x18\x01 \x01(\v2\x10.rsca.api.MemberR\x06member\"f\n" +
	"\vPingMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tstream_id\x18\x02 \x01(\tR\bstreamId\x12*\n" +
	"\x02ts\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02ts\"f\n" +
	"\vPongMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tstream_id\x18\x02 \x01(\tR\bstreamId\x12*\n" +
	"\x02ts\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02ts\"#\n" +
	"\x11TriggerAllMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"+\n" +
	"\x19RepeatRegistrationMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"?\n" +
	"\x13MemberUpdateMessage\x12(\n" +
	"\x06member\x18\x01 \x01(\v2\x10.rsca.api.MemberR\x06member\"\xdd\x02\n" +
	"\fEventMessage\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12'\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.rsca.api.CheckTypeR\x04type\x12\x14\n" +
	"\x05check\x18\x03 \x01(\tR\x05check\x12(\n" +
	"\x06status\x18\x04 \x01(\x0e2\x10.rsca.api.StatusR\x06status\x12\x16\n" +
	"\x06output\x18\x05 \x01(\tR\x06output\x12!\n" +
	"\foutput_error\x18\n" +
	" \x01(\tR\voutputError\x12\x1a\n" +
	"\bperfdata\x18\x06 \x01(\tR\bperfdata\x12G\n" +
	"\x11request_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x10requestTimestamp\x12\x18\n" +
	"\aretries\x18\b \x01(\x05R\aretries\x12\x0e\n" +
	"\x02id\x18\t \x01(\tR\x02id*8\n" +
	"\x06Status\x12\x06\n" +
	"\x02OK\x10\x00\x12\v\n" +
	"\aWARNING\x10\x01\x12\f\n" +
	"\bCRITICAL\x10\x02\x12\v\n" +
	"\aUNKNOWN\x10\x03*\"\n" +
	"\tCheckType\x12\b\n" +
	"\x04HOST\x10\x00\x12\v\n" +
	"\aSERVICE\x10\x01B$Z\x1agithub.com/na4ma4/rsca/api\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_github_com_na4ma4_rsca_api_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_na4ma4_rsca_api_common_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_github_com_na4ma4_rsca_api_common_proto_goTypes = []any{
	(Status)(0),                       // 0: rsca.api.Status
	(CheckType)(0),                    // 1: rsca.api.CheckType
	(*Empty)(nil),                     // 2: rsca.api.Empty
	(*TriggerAllResponse)(nil),        // 3: rsca.api.TriggerAllResponse
	(*TriggerInfoResponse)(nil),       // 4: rsca.api.TriggerInfoResponse
	(*Envelope)(nil),                  // 5: rsca.api.Envelope
	(*Members)(nil),                   // 6: rsca.api.Members
	(*Member)(nil),                    // 7: rsca.api.Member
	(*InfoStat)(nil),                  // 8: rsca.api.InfoStat
	(*Message)(nil),                   // 9: rsca.api.Message
	(*RegisterMessage)(nil),           // 10: rsca.api.RegisterMessage
	(*PingMessage)(nil),               // 11: rsca.api.PingMessage
	(*PongMessage)(nil),               // 12: rsca.api.PongMessage
	(*TriggerAllMessage)(nil),         // 13: rsca.api.TriggerAllMessage
	(*RepeatRegistrationMessage)(nil), // 14: rsca.api.RepeatRegistrationMessage
	(*MemberUpdateMessage)(nil),       // 15: rsca.api.MemberUpdateMessage
	(*EventMessage)(nil),              // 16: rsca.api.EventMessage
	(*timestamppb.Timestamp)(nil),     // 17: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),       // 18: google.protobuf.Duration
}
var file_github_com_na4ma4_rsca_api_common_proto_depIdxs = []int32{
	7,  // 0: rsca.api.Envelope.sender:type_name -> rsca.api.Member
	6,  // 1: rsca.api.Envelope.recipient:type_name -> rsca.api.Members
	17, // 2: rsca.api.Member.last_seen:type_name -> google.protobuf.Timestamp
	18, // 3: rsca.api.Member.ping_latency:type_name -> google.protobuf.Duration
	8,  // 4: rsca.api.Member.info_stat:type_name -> rsca.api.InfoStat
	17, // 5: rsca.api.Member.system_start:type_name -> google.protobuf.Timestamp
	17, // 6: rsca.api.Member.process_start:type_name -> google.protobuf.Timestamp
	17, // 7: rsca.api.InfoStat.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 8: rsca.api.Message.envelope:type_name -> rsca.api.Envelope
	10, // 9: rsca.api.Message.register_message:type_name -> rsca.api.RegisterMessage
	11, // 10: rsca.api.Message.ping_message:type_name -> rsca.api.PingMessage
	12, // 11: rsca.api.Message.pong_message:type_name -> rsca.api.PongMessage
	16, // 12: rsca.api.Message.event_message:type_name -> rsca.api.EventMessage
	13, // 13: rsca.api.Message.trigger_all_message:type_name -> rsca.api.TriggerAllMessage
	14, // 14: rsca.api.Message.repeat_registration_message:type_name -> rsca.api.RepeatRegistrationMessage
	15, // 15: rsca.api.Message.member_update_message:type_name -> rsca.api.MemberUpdateMessage
	7,  // 16: rsca.api.RegisterMessage.member:type_name -> rsca.api.Member
	17, // 17: rsca.api.PingMessage.ts:type_name -> google.protobuf.Timestamp
	17, // 18: rsca.api.PongMessage.ts:type_name -> google.protobuf.Timestamp
	7,  // 19: rsca.api.MemberUpdateMessage.member:type_name -> rsca.api.Member
	1,  // 20: rsca.api.EventMessage.type:type_name -> rsca.api.CheckType
	0,  // 21: rsca.api.EventMessage.status:type_name -> rsca.api.Status
	17, // 22: rsca.api.EventMessage.request_timestamp:type_name -> google.protobuf.Timestamp
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_github_com_na4ma4_rsca_api_common_proto_init() }
func file_github_com_na4ma4_rsca_api_common_proto_init() {
	if File_github_com_na4ma4_rsca_api_common_proto != nil {
		return
	}
	file_github_com_na4ma4_rsca_api_common_proto_msgTypes[7].OneofWrappers = []any{
		(*message_RegisterMessage)(nil),
		(*message_PingMessage)(nil),
		(*message_PongMessage)(nil),
		(*message_EventMessage)(nil),
		(*message_TriggerAllMessage)(nil),
		(*message_RepeatRegistrationMessage)(nil),
		(*message_MemberUpdateMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_na4ma4_rsca_api_common_proto_rawDesc), len(file_github_com_na4ma4_rsca_api_common_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_na4ma4_rsca_api_common_proto_goTypes,
		DependencyIndexes: file_github_com_na4ma4_rsca_api_common_proto_depIdxs,
		EnumInfos:         file_github_com_na4ma4_rsca_api_common_proto_enumTypes,
		MessageInfos:      file_github_com_na4ma4_rsca_api_common_proto_msgTypes,
	}.Build()
	File_github_com_na4ma4_rsca_api_common_proto = out.File
	file_github_com_na4ma4_rsca_api_common_proto_goTypes = nil
	file_github_com_na4ma4_rsca_api_common_proto_depIdxs = nil
}
